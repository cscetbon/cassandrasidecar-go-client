/*
 * Instaclustr Cassandra Sidecar
 *
 * REST API for Cassandra Sidecar from Instaclustr
 *
 * API version: 1.1.0
 * Contact: support@instaclustr.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package cassandrasidecar

import (
	"encoding/json"
)

// DrainOperationRequest drain a node, this operation will be successful only in case a node is in state NORMAL, when a node was already drained or it is in the middle of draining, this operation returns immediately. 
type DrainOperationRequest struct {
	Type string `json:"type"`
}

// NewDrainOperationRequest instantiates a new DrainOperationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDrainOperationRequest(type_ string, ) *DrainOperationRequest {
	this := DrainOperationRequest{}
	this.Type = type_
	return &this
}

// NewDrainOperationRequestWithDefaults instantiates a new DrainOperationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDrainOperationRequestWithDefaults() *DrainOperationRequest {
	this := DrainOperationRequest{}
	return &this
}

// GetType returns the Type field value
func (o *DrainOperationRequest) GetType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *DrainOperationRequest) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *DrainOperationRequest) SetType(v string) {
	o.Type = v
}

func (o DrainOperationRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableDrainOperationRequest struct {
	value *DrainOperationRequest
	isSet bool
}

func (v NullableDrainOperationRequest) Get() *DrainOperationRequest {
	return v.value
}

func (v *NullableDrainOperationRequest) Set(val *DrainOperationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDrainOperationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDrainOperationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDrainOperationRequest(val *DrainOperationRequest) *NullableDrainOperationRequest {
	return &NullableDrainOperationRequest{value: val, isSet: true}
}

func (v NullableDrainOperationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDrainOperationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
